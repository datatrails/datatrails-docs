<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quickstart on</title><link>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/</link><description>Recent content in Quickstart on</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><lastBuildDate>Thu, 20 May 2021 12:03:27 +0100</lastBuildDate><atom:link href="https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/index.xml" rel="self" type="application/rss+xml"/><item><title>When Who Did What to a Thing?</title><link>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/when-who-did-what-to-a-thing/</link><pubDate>Thu, 12 Nov 2020 13:26:54 +0100</pubDate><guid>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/when-who-did-what-to-a-thing/</guid><description>Enterprise developers are challenged to build apps that track usage and build trust in multi-party data while meeting assurance, governance, and compliance needs of the business.
The Jitsuin RKVST is a Data Assurance Hub which stores shared asset evidence that proves when who did what to reduce risk, authenticates provenance in data for confident decisions, while governing complex data sharing controls.
Unlike forming your own blockchain consortium, committing to expensive integrations or managing spreadsheets, RKVST brings the right level of trust to data with a single line of code integration at a fraction of cost and time to value.</description></item><item><title>Creating an Asset</title><link>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/creating-an-asset/</link><pubDate>Tue, 18 May 2021 14:52:25 +0100</pubDate><guid>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/creating-an-asset/</guid><description>As discussed in the previous section, An Asset can be anything: an IOT Sensor, a Shipping Container or even a Purchase Order. Any kind of object, physical or otherwise, which has a Name, Description and Attributes associated with it.
More than this though an Asset is also the sum of it&amp;rsquo;s history, any change it has been through and any action against it.
In that regard you may consider the creation of an Asset to be the first event in its lifecycle, the following steps will walk you through creating your first asset.</description></item><item><title>Creating an Event Against an Asset</title><link>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/creating-an-event-against-an-asset/</link><pubDate>Tue, 18 May 2021 15:32:01 +0100</pubDate><guid>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/creating-an-event-against-an-asset/</guid><description>If you wish to begin tracking actions against your asset you need to create events.
While the Asset Creation phase is important it is only the first event in an Asset&amp;rsquo;s history. The more events you create against an asset, the richer and deeper its' history becomes.
Events are where we track many of the key features of the Asset&amp;rsquo;s lifecycle; this is where we track in closer detail the When, the Who and the What happens to the Asset.</description></item><item><title>Grouping Assets by Location</title><link>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/grouping-assets-by-location/</link><pubDate>Tue, 18 May 2021 15:32:27 +0100</pubDate><guid>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/grouping-assets-by-location/</guid><description>Locations are not always high fidelity but are useful to logically indicate an Asset&amp;rsquo;s associated home, they help to organize users and the required access to assets when used ABAC and OBAC Policies to share assets.
Even if an Asset moves around it is still useful to indicate its original home, for example, if you wanted to track Laptop Assets for consultants who travelled you may still wish they are associated with a specific office.</description></item><item><title>Managing Access to an Asset With ABAC</title><link>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/managing-access-to-an-asset-with-abac/</link><pubDate>Tue, 18 May 2021 15:33:03 +0100</pubDate><guid>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/managing-access-to-an-asset-with-abac/</guid><description>ðŸ’¡ You will only have access to the &amp;#39;Manage Policies&amp;#39; screen if you are a Root User in your organization. The Root User is typically the account which has signed in first. Attribute Based Access Control can be used to control access to Assets, their attributes and events within an organisation. Specifically, ABAC policies are created by Root Users to then share information with Non-Root Users in the same Tenancy.</description></item><item><title>Sharing Assets With OBAC</title><link>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/sharing-assets-with-obac/</link><pubDate>Tue, 18 May 2021 15:33:31 +0100</pubDate><guid>https://jitsuin-inc.github.io/rkvst-docs/docs/quickstart/sharing-assets-with-obac/</guid><description>ðŸ’¡ You will only have access to the &amp;#34;Manage Policies&amp;#34; screen if you are a Root User in your organization. The Root User is typically the account which has signed in first. ðŸ’¡ To use OBAC you will need an external organization to share with. If you are evaluating RKVST the following may not be immediately relevant but is still important to understand. ABAC and OBAC have a lot in common, they both apply the same controls but to two different classes of Actor.</description></item></channel></rss>